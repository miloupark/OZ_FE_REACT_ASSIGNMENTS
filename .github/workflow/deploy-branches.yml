name: Deploy mapped subfolder to GitHub Pages

on:
  push:
    branches:
      - map
      - jsx
      - state-props
      - cardlist
  workflow_dispatch:

permissions:
  contents: write # gh-pages 브랜치에 푸시할 수 있도록 권한 부여

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

env:
  # 브랜치 -> 서브폴더 매핑
  MAP_map: OZ_FE_REACT_ASSIGNMENTS_map-filter
  MAP_jsx: OZ_FE_REACT_ASSIGNMENTS_understand_jsx
  MAP_state-props: OZ_FE_REACT_ASSIGNMENTS_state-props
  MAP_cardlist: OZ_FE_REACT_ASSIGNMENTS_cardlist

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm

      - name: Resolve project dir
        id: res
        shell: bash
        run: |
          BRANCH="${GITHUB_REF_NAME}"
          KEY="MAP_${BRANCH//-/_}"
          PROJ="${!KEY}"
          if [ -z "$PROJ" ]; then
            echo "No mapping for $BRANCH"; exit 1
          fi
          echo "proj=$PROJ" >> $GITHUB_OUTPUT
          echo "Resolved: $BRANCH -> $PROJ"

      - name: Install & Build (force base=./)
        working-directory: ${{ steps.res.outputs.proj }}
        run: |
          npm ci || npm i
          npx vite build --base=./

      - name: Prepare output
        run: |
          rm -rf out
          mkdir -p out
          cp -r "${{ steps.res.outputs.proj }}/dist/." out/

      - name: Deploy to gh-pages/<branch>
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./out
          destination_dir: ${{ github.ref_name }}
